Оптимизация для разных интервалов lastactive:
Нижняя граница до которой оптимизировать не надо. Для тех кто ниже принимаем модель "="
60 - оптимально
от 60 до 100 - сомнительный интервал
от 100 до 140 тоже плохенький но лучше
от 140 до 190 последний сомнительный, лучше предыдущего
от 190 все хорошо

! ПОПРОБОВАТЬ ВАРИАНТ ТАРГЕТА
yhat = (X[f'{target}(0)'] - y) / X[f'{target}(0)']
yhat[X[f'{target}(0)'] == 0] = 0
и тот что у умного
raw['target'] = raw.groupby('cfips')['microbusiness_density'].shift(-1) разность текущего и предыдущего
raw['target'] = raw['target'] / raw['microbusiness_density'] - 1

от 50 до 100 lastactive=param=15   max_active = 5730;
error 2.182730 -0.025767     0.000440



# Сделать отдельные модели по штатам и создать ранг полезности предсказания теста одного штата по модели другого штата
# Разделить cfips на группы по штатам и населению

# Сделать отдельные модели по группам цфипс разделенным по населению и другим признакам
# Проверить оптимизируемость и применимость модели без лагов, кроме лаг1 в другой модели

# Сделать модель предсказывающую решение какой из моделей верное на основе ласт правильности предыдущих
# моделей штата и ластактиве
# Как альтернатива предыдущему сделать линейную модель из решений 2-х моделей. А можно после этого
# сделать предыдущее решение

# ОШИБКА - после создания гибридов в new_cfips не было сглаживания вновб созданных гибридов -
# поэтому вероятно если сгладить гибриды то оптимизация new_cfips и ластактиве может быть другой


# НЕ РАБОТАЕТ Создать блек листы:
# НЕ РАБОТАЕТ  -по результатам предыдущих месяцев предсказания
# НЕ РАБОТАЕТ -по суммарному отклонению за все предыдущие месяцы
# НЕ РАБОТАЕТ -по качеству предсказания отдельных моделей за предыдущие месяцы
# НЕ РАБОТАЕТ -по абсолютной величине плотности микробинеса
# НЕ РАБОТАЕТ -по суммарному изменению отношения микробизнеса к активе в течении месяцев

Тесты на основе файла targ_diskretno4
от 220 - 1.106
8000 - 1.0954
22000 - 1.0936 - так-же как и "="
50000 - 1.0938
50000000 - 1.0936 - так-же как и "="


versia,min,max,kol,lastactive,param,optim,error,dif_err,dif_no_blac
1,120,160,187,30,0.006,2,2.22542759539376,-0.01021273068958406,0.00019455124138945123
1,160,220,189,160,0.0086,2,1.8827464806533714,-0.004986054322711153,0.0021058424082911475
1,220,300,201,220,0.0085,2,1.7862033931042638,0.004576953097933156,0.0030262272708958537
1,300,400,193,300,0.007,2,1.7997483464188957,0.0022574386475715524,0.001355204348458372
1,400,550,192,364,0.0062,2,1.6195701339101314,0.010019967123860107,0.0018940496828145914
1,550,750,190,550,0.0057,2,1.3899752634014721,0.012547143145495987,0.00476647736335245
1,750,1050,203,741,0.0053,2,1.238811136006477,0.007781279722456569,0.003020065231769564
1,1050,1450,176,712,0.0078,2,1.2360635416448984,0.017769461914373785,0.004162878754109478
1,1450,2300,192,585,0.0072,2,1.1840180284177193,0.01678526925102597,0.003737605115275766
1,2300,4000,194,1368,0.0065,2,1.0067695222177815,0.024982544995810985,0.007447456128009788
1,4000,8000,204,2066,0.0077,2,1.0141728508875822,0.04952618276927456,0.014501176203674415
1,8000,22000,185,2027,0.0086,2,0.9215607502420015,0.055806516537937334,0.014398936259358397
1,22000,0,184,5754,0.0093,2,0.8725260600483434,0.0793254544169999,0.02366741678293227